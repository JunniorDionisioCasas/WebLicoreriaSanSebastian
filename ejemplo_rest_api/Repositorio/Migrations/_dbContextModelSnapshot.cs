// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorio;

#nullable disable

namespace Repositorio.Migrations
{
    [DbContext(typeof(_dbContext))]
    partial class _dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Modelos.CargoModel", b =>
                {
                    b.Property<int>("id_cargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_cargo"), 1L, 1);

                    b.Property<string>("des_cargo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("id_cargo");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("Modelos.CategoriaModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Modelos.DetalleEntradaModel", b =>
                {
                    b.Property<int>("iddetalleentradas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iddetalleentradas"), 1L, 1);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_entrada")
                        .HasColumnType("int");

                    b.Property<int>("id_medicamento")
                        .HasColumnType("int");

                    b.HasKey("iddetalleentradas");

                    b.HasIndex("id_entrada");

                    b.HasIndex("id_medicamento");

                    b.ToTable("DetalleEntrada");
                });

            modelBuilder.Entity("Modelos.DetalleSalidaModel", b =>
                {
                    b.Property<int>("iddetallesalida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iddetallesalida"), 1L, 1);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_medicamento")
                        .HasColumnType("int");

                    b.Property<int>("id_salida")
                        .HasColumnType("int");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("iddetallesalida");

                    b.HasIndex("id_medicamento");

                    b.HasIndex("id_salida");

                    b.ToTable("DetalleSalida");
                });

            modelBuilder.Entity("Modelos.EntradaModel", b =>
                {
                    b.Property<int>("identradas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("identradas"), 1L, 1);

                    b.Property<string>("NumeroCompra")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_persona")
                        .HasColumnType("int");

                    b.Property<int>("id_proveedor")
                        .HasColumnType("int");

                    b.Property<double>("subtotal")
                        .HasColumnType("float");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("identradas");

                    b.HasIndex("id_persona");

                    b.HasIndex("id_proveedor");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("Modelos.LaboratorioModel", b =>
                {
                    b.Property<int>("idlaboratorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idlaboratorio"), 1L, 1);

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("razonsocial")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("representante")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("idlaboratorio");

                    b.ToTable("Laboratorio");
                });

            modelBuilder.Entity("Modelos.MedicamentoModel", b =>
                {
                    b.Property<int>("idmedicamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idmedicamento"), 1L, 1);

                    b.Property<string>("concentracion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaingreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechavencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<int>("id_laboratorio")
                        .HasColumnType("int");

                    b.Property<int>("id_presentacion")
                        .HasColumnType("int");

                    b.Property<string>("medicamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("idmedicamento");

                    b.HasIndex("id_categoria");

                    b.HasIndex("id_laboratorio");

                    b.HasIndex("id_presentacion");

                    b.ToTable("Medicamento");
                });

            modelBuilder.Entity("Modelos.PersonaModel", b =>
                {
                    b.Property<int>("idPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPersona"), 1L, 1);

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("apellido_materno")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("apellido_paterno")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("gmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("idcargo")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("idPersona");

                    b.HasIndex("idcargo");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("Modelos.PresentacionModel", b =>
                {
                    b.Property<int>("idpresentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idpresentacion"), 1L, 1);

                    b.Property<string>("presentacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("idpresentacion");

                    b.ToTable("Presentacion");
                });

            modelBuilder.Entity("Modelos.ProveedorModel", b =>
                {
                    b.Property<int>("idproveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idproveedor"), 1L, 1);

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("razonsocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("representante")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("idproveedor");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("Modelos.SalidaModel", b =>
                {
                    b.Property<int>("idsalidas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idsalidas"), 1L, 1);

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_sucursal")
                        .HasColumnType("int");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("serie")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("idsalidas");

                    b.HasIndex("id_sucursal");

                    b.ToTable("Salida");
                });

            modelBuilder.Entity("Modelos.SucursalModel", b =>
                {
                    b.Property<int>("idsucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idsucursal"), 1L, 1);

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("representante")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("idsucursal");

                    b.ToTable("Sucursal");
                });

            modelBuilder.Entity("Modelos.UsuarioModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("id_persona")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_persona");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("Modelos.DetalleEntradaModel", b =>
                {
                    b.HasOne("Modelos.EntradaModel", "entradas")
                        .WithMany()
                        .HasForeignKey("id_entrada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.MedicamentoModel", "Medicamento")
                        .WithMany()
                        .HasForeignKey("id_medicamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamento");

                    b.Navigation("entradas");
                });

            modelBuilder.Entity("Modelos.DetalleSalidaModel", b =>
                {
                    b.HasOne("Modelos.MedicamentoModel", "medicamento")
                        .WithMany()
                        .HasForeignKey("id_medicamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.SalidaModel", "salida")
                        .WithMany()
                        .HasForeignKey("id_salida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("medicamento");

                    b.Navigation("salida");
                });

            modelBuilder.Entity("Modelos.EntradaModel", b =>
                {
                    b.HasOne("Modelos.PersonaModel", "personas")
                        .WithMany()
                        .HasForeignKey("id_persona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.ProveedorModel", "proveedor")
                        .WithMany()
                        .HasForeignKey("id_proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personas");

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("Modelos.MedicamentoModel", b =>
                {
                    b.HasOne("Modelos.CategoriaModel", "categoria")
                        .WithMany()
                        .HasForeignKey("id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.LaboratorioModel", "laboratorio")
                        .WithMany()
                        .HasForeignKey("id_laboratorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.PresentacionModel", "presentacion")
                        .WithMany()
                        .HasForeignKey("id_presentacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("laboratorio");

                    b.Navigation("presentacion");
                });

            modelBuilder.Entity("Modelos.PersonaModel", b =>
                {
                    b.HasOne("Modelos.CargoModel", "cargo")
                        .WithMany()
                        .HasForeignKey("idcargo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cargo");
                });

            modelBuilder.Entity("Modelos.SalidaModel", b =>
                {
                    b.HasOne("Modelos.SucursalModel", "sucursal")
                        .WithMany()
                        .HasForeignKey("id_sucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("Modelos.UsuarioModel", b =>
                {
                    b.HasOne("Modelos.PersonaModel", "Persona")
                        .WithMany("Usuario")
                        .HasForeignKey("id_persona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Modelos.PersonaModel", b =>
                {
                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
